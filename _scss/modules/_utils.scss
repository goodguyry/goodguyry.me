/******************************************
 * Placeholders
 *****************************************/

/**
 * Hides content
 * @extend %offscreen
 */
%offscreen {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 0;
  height: 0;
  overflow: hidden;
  line-height: 0;
  opacity: 0;
}

/******************************************
 * Functions
 *****************************************/

/**
 * Convert a given px value to em based on base-font-size
 *
 * padding: px-to-em(10);
 */
@function px-to-em($px) {
  @return ($px/$base-font-size) + em;
}


/******************************************
 * Mixins
 *****************************************/

/**
 * Simple columns
 * Accepts fraction for columns
 * Gutters faked with padding
 *
 * @include column(1/3);
 */
@mixin column($fraction) {
  width: percentage($fraction);
  float: left;
}

/**
 * Simple media query
 * Takes a pixel length, converts it to ems and adds the passed style declarations
 * Media query condition is always min-width
 * @param $px The pixel length to be converted to ems
 *
 * @include responsive(px) { ... }
 */
@mixin responsive($px) {
  @media only screen and (min-width: (px-to-em($px))) { @content; }
}

/**
 * Prefixerizer(tm)
 * @param $prop The CSS property to be prefixed
 * @param $values {String} The values applied to the property
 *
 * @include prefix(property, "value");
 */
@mixin prefix($prop, $values) {
  $vendors: -webkit-, -moz-, -ms-, -o-, '';

  @each $vendor in $vendors {
    #{$vendor}#{$prop}: #{$values};
  }
}

/**
 * Use Hi-DPI images where applicable
 * Adds the passed style declarations
 *
 * @include retinize { ... }
 */
@mixin retinize {
  @media (-webkit-min-device-pixel-ratio: 1.5),
         (min--moz-device-pixel-ratio: 1.5),
         (-o-min-device-pixel-ratio: 3/2),
         (min-device-pixel-ratio: 1.5),
         (min-resolution: 1.5dppx) {
    @content;
  }
}

/**
 * Add a nice, 200ms transition
 * @param $properties A list of the properties to be transitioned
 *
 * @include transition((property-1[, property-2]));
 */
@mixin transition($properties) {

  $values: ();

  @each $property in $properties {
    $values: append($values, $property .2s ease, comma);
  }

  // use the Prefixerizer(tm)
  @include prefix(transition, $values);
}
